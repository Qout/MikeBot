<?php

class MEvents
{
    public $info = [];
    public $params = null;
    public $callback = null;
    
    public function Test ()
    {
		return; // –ß—Ç–æ–±—ã –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–∑–≤–∞—Ç—å.
		
		global $Control;
		
		$params = $this->params;
        $Control->printm ('–í—ã —É–∫–∞–∑–∞–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ' . implode (' ', $params));
    }
	
	public function tlk ()
	{
		if ($this->params != null)
		{
			global $Control, $db, $MySql, $ServerControl;
				
			if (($Cfg = Cfg ('tlk')) && $Cfg->enable)
			{
				
				$SteamId = '';
				
				$lk_modify = [
					'lk' => ['cash', 'all_cash'],
					'lk_system' => ['money', 'all_money']
				];
				$lk_tableName = 'lk';
				
				if (!empty (@$this->params [2]))
				{
					$SteamId = @str_replace (["'", '"', 'DELETE', 'FROM', 'SELECT', 'WHERE', '=', '*', ' ', ';'], '', @base64_decode (@$this->params [2]));
					
					@$MySql->Server (@$this->params [0] + 1);
					
					foreach ($lk_modify as $table => $columns)
					{
						if ($MySql->IsTable ($table))
						{
							$lk_tableName = $table;
							break;
						}
					}
					
					$DBInfo = @$MySql->query ("SELECT * FROM {$lk_tableName} WHERE auth = '{$SteamId}';");
				}
				
				if (empty ($SteamId) || $SteamId != @$DBInfo [0]['auth'])
				{
					if (!is_bool ($DBInfo))
						$Control->printm ((empty ($DBInfo) ? "‚ùó –û—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ –í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π SteamId.\n\n" : '') . "&#127918; –ü—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Steam –∫ –±–æ—Ç—É, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É <<" . prefix . "–°—Ç–∏–º [–í–∞—à SteamId]>>.\n\nüí¨ –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â–µ —Ä–∞–∑!");
					else
						$Control->printm ('‚ùó –û—à–∏–±–∫–∞, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ!');
					
					return;
				}
				
				$rub = @$this->params [1];
				
				if (is_numeric ($rub))
				{
					if ($rub > $this->info [2]['money'])
						$Control->printm ("‚ùó –û—à–∏–±–∫–∞, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\n„Ö§„Ö§üí≥ –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏: {$this->info [2]['money']} RUB.");
					elseif ($rub <= 0)
						$Control->printm ("‚ùó –û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞.");
					else
					{
						$TLK = false;
						$Players = $ServerControl->send ('sm_mike_getinfo', @$this->params [0] + 1);
						$IsPlayerInGame = strpos ($Players, "|{$DBInfo [0]['auth']}") > 0;
						
						if (!empty ($Players) 
							&& ($IsPlayerInGame 
							|| $MySql->query ("UPDATE {$lk_tableName} SET {$lk_modify [$lk_tableName][0]} = '" . ($DBInfo [0][$lk_modify [$lk_tableName][0]] + $rub) . "', {$lk_modify [$lk_tableName][1]} = '" . ($DBInfo [0][$lk_modify [$lk_tableName][1]] + $rub) . "' WHERE auth = '{$DBInfo [0]['auth']}';", 'q')))
						{
							if ($IsPlayerInGame)
							{
								$userid = trim (@end (@explode ("\n#", @explode ("|{$DBInfo [0]['auth']}", $Players) [0])));
								
								if ($MySql->query ("UPDATE {$lk_tableName} SET {$lk_modify [$lk_tableName][1]} = '" . ($DBInfo [0][$lk_modify [$lk_tableName][1]] + $rub) . "' WHERE auth = '{$DBInfo [0]['auth']}';", 'q'))
								{
									if (strpos ($ServerControl->send ("sm_lkrub add #{$userid} {$rub}; sm_psay #{$userid} \"–í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {$rub} RUB\"", @$this->params [0] + 1), '–ø–æ–ø–æ–ª–Ω–∏–ª —Å—á–µ—Ç –∏–≥—Ä–æ–∫—É') > 0
										|| $MySql->query ("UPDATE {$lk_tableName} SET {$lk_modify [$lk_tableName][0]} = '" . ($DBInfo [0][$lk_modify [$lk_tableName][0]] + $rub) . "' WHERE auth = '{$DBInfo [0]['auth']}';", 'q'))
									{
										$db->query ("UPDATE MikeDb SET money = '" . ($this->info [2]['money'] - $rub) . "' WHERE user_id = '{$this->info [2]['user_id']}'", 'q');
										$TLK = true;
									}
								}
							}
							else
							{
								$db->query ("UPDATE MikeDb SET money = '" . ($this->info [2]['money'] - $rub) . "' WHERE user_id = '{$this->info [2]['user_id']}'", 'q');
								$TLK = true;
							}
						}
						else
						{
							$Control->printm ('‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.');
							return;
						}
						
						if ($TLK) $Control->printm ("üëë –ò–≥—Ä–æ–∫—É <<{$DBInfo [0]['name']}>> –±—ã–ª –ø–æ–ø–æ–ª–Ω–µ–Ω –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É {$rub} RUB.");
						else $Control->printm ('‚ùó –û—à–∏–±–∫–∞, –∏–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º SteamId –Ω–µ –Ω–∞–π–¥–µ–Ω. (–í–æ–∑–º–æ–∂–Ω–æ –í—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π SteamId (–û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ STEAM_X:X:XXXXXXX))');
					}
				}
				else $Control->printm ('‚ùó –û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ —Ä—É–±–ª–∏.');
			}
			else $Control->printm ("‚ùó –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
		}
	}
	
	public function vkadmin ()
	{
		if ($this->params != null)
		{
			global $Control, $db;
			
			if (($data = $db->query ("SELECT fname, lname, user_id FROM MikeDb WHERE steamid = '" . base64_encode ($this->params [1]) . "'", 'array:assoc')))
				$Control->printm ("‚≠ê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <<{$this->params [0]}>>\n„Ö§„Ö§–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/id{$data [0]['user_id']}");
			else $Control->printm ('‚ùó –û—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Steam –∫ –±–æ—Ç—É.');
		}
	}
	
	public function shop ()
	{
		if ($this->params != null && count ($this->params) > 0 && is_numeric ($this->params [0]))
		{
			if (($Cfg = Cfg ('shop')) && $Cfg->enable)
			{
				global $Control, $Api, $ServerControl, $KeyBoard;
				
				$btns = [];
				$id = $this->params [0];
				$items = @$Cfg->items [$id + 1];
				
				if (count ($items) > 0)
				{
					$type = count ($this->params);
					
					if ($type >= 2)
					{
						// –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ –∑–∞–¥–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
						// –ò –ø–æ–ª—É—á–∞–µ–º Id —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å (–ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ Id —ç–ª–µ–º–µ–Ω—Ç–∞ –±—É–¥–µ—Ç 0)
						$next = 0;
						$list_number = @$this->params [2];
						if (!empty ($list_number) && is_numeric ($list_number))
						{
							$next = @$this->params [3];
							if (empty ($next) || !is_numeric ($next))
								$next = 0;
							
							$list_number++;
						}
						else $list_number = 2;
						
						$items = $items [$this->params [1]];
						$items_count = count ($items);
						$i = 0;
						
						if ($items_count > 0)
						{
							$jump = false;
							foreach ($items as $Name => $Data)
							{
								$i++;
								if ($next >= $i) continue;
								
								$KeyBoard->AddButton (
									'üí≥ –ö—É–ø–∏—Ç—å',
									['func' => 'shop_pay', 'data' => [$id, $this->params [1], $Name]],
									false
								);
								
								$attachment = '';
								if (!empty ($Data ['photo']) && file_exists (__IMAGES__ . "/{$Data ['photo']}"))
								{
									// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
									if (($Upload = $Api->UploadMessagePhoto (__IMAGES__ . "/{$Data ['photo']}")) && !empty ($Upload))
										$attachment = "photo{$Upload [0]['owner_id']}_{$Upload [0]['id']}";
								}
								
								$Control->printm ('üëë –ù–∞–∑–≤–∞–Ω–∏–µ: ' . ucfirst (strtolower ($Name)) . ".\nüí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: {$Data ['price']} RUB." . (!empty ($Data ['info']) ? "\n\n{$Data ['info']}" : ''), $attachment, 0, $KeyBoard->Get (), ($i + 1));
							
								// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤
								if ($i == ($next+4) && $items_count > $i)
								{
									$KeyBoard->AddButton (
										"üëæ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ {$list_number} —Å—Ç—Ä–∞–Ω–∏—Ü—É",
										['func' => 'shop', 'data' => [$id, $this->params [1], $list_number, $i]],
										false
									);
									
									$Control->printm ("üòº –í—ã —Å–µ–π—á–∞—Å –Ω–∞ ".($list_number - 1)." —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É?.", '', 0, $KeyBoard->Get (), ($i + 2));
									
									break;
								}
							}
						}
						else $Control->printm ('‚ùóÔ∏è –û—à–∏–±–∫–∞, –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è.');
					}
					elseif ($type == 1)
					{
						$Colors = ['primary', 'positive', 'negative'];
						if (count ($ServerControl->servers) == 0)
						{
							$Control->printm ('‚ùó –û—à–∏–±–∫–∞, –Ω–∏–∫–∞–∫–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∫ –±–æ—Ç—É –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã!');
							return;
						}
						
						$btns = [];
						$glob_i = 0;
						$i = 0;
						
						$iItems = count ($items);
						
						foreach ($items as $Name => $Data)
						{
							$glob_i++;
							$i++;
							
							if ($i >= 1)
							{
								$KeyBoard->AddButton (
									ucfirst (strtolower ($Name)),
									['func' => 'shop', 'data' => [$id, $Name]],
									false,
									$Colors [$i-1]
								);
								
								if ($i == 3 || ($iItems-$glob_i) == 0)$i = 0;
							}
							
							if ($i == 0)
								$Control->printm ((($glob_i > 0 && $glob_i < 4) ? 'üëë –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–µ—â–µ–π.' : '&#13;'), '', 0, $KeyBoard->Get (), $glob_i+1);
						}
					}
				}
				else $Control->printm ('‚ùóÔ∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ <<' . $ServerControl->servers [$id]['title'] . '>> –Ω–∏–∫–∞–∫–∏–µ –≤–µ—â–∏ –∑–∞ –¥–µ–Ω—å–≥–∏ –Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è.');
			}
			else $Control->printm ('‚ùóÔ∏è –ú–∞–≥–∞–∑–∏–Ω –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
		}
	}
	
	public function shop_pay ()
	{
		if ($this->params != null && count ($this->params) == 3 && is_numeric ($this->params [0]))
		{
			if (($Cfg = Cfg ('shop')) && $Cfg->enable)
			{
				global $Control, $db, $ServerControl;
				
				$item = @$Cfg->items [$this->params [0] + 1][$this->params [1]][$this->params [2]];
				
				if (!empty ($item))
				{
					$price = $item ['price'];
					
					if ($price > $this->info [2]['money'])
						$Control->printm ("‚ùó –û—à–∏–±–∫–∞, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\n„Ö§„Ö§üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {$this->info [2]['money']} RUB.");
					else
					{
						if (empty ($this->info [2]['steamid']))
							$Control->printm ('&#127918; –ü—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Steam –∫ –±–æ—Ç—É, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É <<' . prefix . "–°—Ç–∏–º [–í–∞—à SteamId]>>.\n\nüí¨ –ü–æ—Å–ª–µ —á–µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –µ—â–µ —Ä–∞–∑!");
						else
						{
							if (empty ($item ['count'])) $item ['count'] = 1;
							
							$buffer   = ' –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –≤–µ—â—å {green}' . ucfirst (strtolower ($this->params [2])) . ' {default}–≤ —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!';
							$response = $ServerControl->send ("sm_mike_giveitems \"" . @base64_decode ($this->info [2]['steamid']) . "\" \"{$item ['category']}\" \"{$item ['item']}\" \"{$item ['count']}\" \"{$buffer}\";", $this->params [0] + 1);
						
							if ($response == PLAYER_NOT_FOUND)
								$Control->printm ('‚ùóÔ∏è –û—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á—Ç–æ–±—ã –±–æ—Ç —Å–º–æ–≥ –≤—ã–¥–∞—Ç—å –í–∞–º —ç—Ç—É –≤–µ—â—å.');
							elseif ($response == ALREADY_IS)
								$Control->printm ('‚ùóÔ∏è –û—à–∏–±–∫–∞, –ø–æ—Ö–æ–∂–µ —É –í–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —ç—Ç–∞ –≤–µ—â—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.');
							elseif ($response == OK)
							{
								$db->query ("UPDATE MikeDb SET money = '" . ($this->info [2]['money'] - $price) . "' WHERE user_id = '{$this->info [2]['user_id']}'", 'q');
								$Control->printm ('üëë –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –≤–µ—â—å <<' . ucfirst (strtolower ($this->params [2])) . ">>.\n\nüëæ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!");
							}
							else $Control->printm ('‚ùó –û—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ —Å–µ–π—á–∞—Å —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');
						}
					}
				}
				else $Control->printm ("‚ùóÔ∏è –û—à–∏–±–∫–∞, –≤–µ—â—å <<{$this->params [1]}>> –Ω–µ –Ω–∞–π–¥–µ–Ω.");
			}
			else $Control->printm ('‚ùóÔ∏è –ú–∞–≥–∞–∑–∏–Ω –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
		}
	}
	
	public function pay ()
	{
		Call('–ø–æ–ø–æ–ª–Ω–∏—Ç—å', $this->info);
	}
	
	public function checkpay ()
	{
		Call('–ø—Ä–æ–≤–µ—Ä–∏—Ç—å', $this->info);
	}
	
	public function mybalance ()
	{
		Call('–±–∞–ª–∞–Ω—Å', $this->info);
	}
	
	public function mytransf ()
	{
		Call('–ø–µ—Ä–µ–≤–µ—Å—Ç–∏', $this->info);
	}
	
	public function rep ()
	{
		if ($this->params != null)
		{
			global $Control, $db, $KeyBoard;
			
			$user_id = $this->info [2]['user_id'];
			$Status = $this->params [0];
			$ProfileID = $this->params [1];
			
			if ($ProfileID == $user_id)
			{
				$Control->popup ('–ú—ã –∑–Ω–∞–µ–º —á—Ç–æ –í—ã ' . (!$Status ? '–Ω–µ ' : '') . '–Ω—Ä–∞–≤–∏—Ç–µ—Å—å —Å–∞–º–æ–º—É —Å–µ–±–µ.');
				return;
			}
			
			if (($info = @$db->query ("SELECT likes, dislikes, listrep FROM MikeDb WHERE user_id = '{$ProfileID}'", 'array:assoc') [0]))
			{
				if (StrContains ((string)$info ['listrep'], (string)$user_id))
					$Control->popup ('–í—ã —É–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ü–µ–Ω–∫—É.');
				else
				{
					$Name = $Status ? 'likes' : 'dislikes';
					
					$list = "{$info ['listrep']},{$user_id}";
					$info [$Name]++;
					
					$db->query ("UPDATE MikeDb SET {$Name} = '{$info [$Name]}', listrep = '{$list}' WHERE user_id = '{$ProfileID}'", 'q');
					
					$likes = @$info ['likes'];
					$likes = $likes == '' ? 0 : $likes;
					
					$dislikes = @$info ['dislikes'];
					$dislikes = $dislikes == '' ? 0 : $dislikes;
					
					$getMsg = $Control->getm ();
					$edit = explode ("\n", $getMsg ['message']);
					$edit [3] = "‚îú‚ú® –†–µ–ø—É—Ç–∞—Ü–∏—è: üëçüèª {$likes} / üëéüèª {$dislikes}";
					$Control->editm (implode ("\n", $edit), $getMsg ['keyboard']);
					
					$Control->popup ('–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ ' . ($Status ? '–ª–∞–π–∫ üëçüèª' : '–¥–∏–∑–ª–∞–π–∫ üëéüèª'));
				}
			}
		}
	}
	
	// @–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–æ—Ç–µ
	public function admban ()
	{
		global $Control, $db;
		
		if (IsAdmin)
		{
			$user_id = $this->info [2]['user_id'];
			
			if ($this->params != null)
			{
				$iCountParams = count ($this->params);
				
				if ($iCountParams > 0)
				{
					if (array_key_exists ('message', $this->params))
					{
						switch (@$this->params ['data'][1])
						{
							case 'time': {
								SetMEvents ($user_id, ['func' => 'admban', 'data' => [$this->params ['data'][0], 'reason', $this->params ['message']]]);
								$Control->printm ('üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.');
							}
							break;
							
							case 'reason': {
								$user_id = $this->params ['data'][0];
								$min = $this->params ['data'][2];
								$reason = $this->params ['message'];
								
								$Control->ban ($user_id, $min, $reason);
								$info = @$db->query ("SELECT * FROM MikeDb WHERE user_id = '{$user_id}'", 'array:assoc') [0];
								
								$Control->printm ("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{$user_id}|{$info ['fname']} {$info ['lname']}] –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ {$min} –º–∏–Ω. –ø–æ –ø—Ä–∏—á–∏–Ω–µ {$reason}.");
							}
							break;
						}
					}
					elseif (is_numeric ($this->params [0]))
					{
						SetMEvents ($user_id, ['func' => 'admban', 'data' => [$this->params [0], 'time']]);
						$Control->printm ('üí¨ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –±–∞–Ω. (–í –º–∏–Ω—É—Ç–∞—Ö)');
					}
				}
			}
		}
		else $Control->popup ('–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤');
	}
	
	public function kickuser ()
	{
		// @$this->params
		if (IsAdmin)
		{
			global $Control, $Api;
			$response = $Api->Inquiry ('messages.removeChatUser', ['chat_id' => @$this->params [0], 'user_id' => @$this->params [1]]);
			$Control->printm ('üë®‚Äçüíª ' . ($response == 1 ? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω.' : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –≤–æ–∑–º–æ–∂–Ω–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –°–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–µ—Å–µ–¥—ã.'));
		}
	}
	
    public function cases ()
    {
        global $Control, $db, $KeyBoard;

		if (($Cfg = Cfg ('cases')) && $Cfg->cases_enable)
		{
			$case_name = @$this->params [0];
			
			if (empty ($case_name) || !array_key_exists ($case_name, $Cfg->cases_data))
			{
				$Control->printm ("‚ùó –û—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–π –∫–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
				return;
			}
			
			$case_min 	= $Cfg->cases_data [$case_name]['min'];
			$case_max 	= $Cfg->cases_data [$case_name]['max'];
			$case_price = $Cfg->cases_data [$case_name]['money'];
			
			if (array_key_exists ('opencase', $this->info [2]) && $this->info [2]['opencase'] > time ())
				$Control->printm ("‚ùó –û—à–∏–±–∫–∞, –∫–µ–π—Å—ã –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å 1 —Ä–∞–∑ –≤ 12 —á–∞—Å–æ–≤.");
			elseif ($this->info [2]['money'] < $case_price)
			{
				$KeyBoard->AddButton (
					'üí≥ –î–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç—å',
					['func' => 'pay', 'data' => '']
				);
				
				$Control->printm ("‚ùó –û—à–∏–±–∫–∞, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞.\n\nüî• –•–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å?.", '', 0, $KeyBoard->Get ());
			}
			else
			{
				$rub = rand ($case_min, $case_max);
				$balance = $this->info [2]['money'] - $case_price;

				$db->query ("UPDATE MikeDb SET money = '".($balance + $rub)."', opencase = '".(time () + ($Cfg->cases_time == 0 ? -10 : $Cfg->cases_time))."' WHERE user_id = '{$this->info [2]['user_id']}'", 'q');
				
				$Control->printm ((($rub >= $case_price) ? ("üëë –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {$rub} RUB") : ("üòø –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: {$rub} RUB")) . '.');
			}
		}
		else
			$Control->printm ("‚ùó –ö–µ–π—Å—ã –±—ã–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.");
    }
}